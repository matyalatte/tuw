- Improved the performance of redirection (#91)
  (Fixed a Windows-specific issue where stdout redirection was unexpectedly slow.)
- FIxed a Linux-specific issue where the console window looks like freezing while running commands. (#89)
- The Linux build now supports more ANSI codes and carriage returns. (#88)
- The Linux build no longer requires `xdg-utils`. (#93)

ver 0.9.1
- Added support for using `gui_definition.tuw` as the default JSON path. (#76)
- Fixed an issue where tuw could not locate JSON files outside its directory. (#79)
- Fixed a Windows-specific issue where the message box failed to display redirected non-ascii characters correctly. (#80)
- Fixed a Windows-specific issue where tuw failed to open file paths containing non-ascii characters. (#81)
- Fixed a Linux-specific issue where the main window appeared behind the console window. (#77)

ver 0.9.0
- Tuw now takes the first argument as a JSON path. (#67)
  (You can now launch GUI just by clicking *.tuw files
   if you rename JSON files to *.tuw and set Tuw as a default application for opening *.tuw.)
- Tuw now uses the default CWD to resolve paths in command-line arguments. (#67)
  (Old versions used executable's directory as CWD.)
- Fixed an error when launching tuw as a macOS application. (#68)
- Disabled the best-fit mapping on Windows to remove potential issues. (#71)
- Disabled c++ stack unwinding on Linux and macOS. (#72)
- Uploaded source files with subprojects to the release page. (#69)

ver 0.8.1
- Fixed a memory leak on Linux. (#59)
- Removed std::exception from tuw. (#63)
  (but libui still uses STL for Windows build.)
- Linux/UNIX packages now uses .tar.xz as a compression format. (#62)
- Universal binary became optional on macOS. (#64)
- Added arm64-only build to the release packages for macOS. (#64)

ver 0.8.0
- Array brackets can now be omitted when there is only one element.
- GUI elements can now be defined in root object.
- GUI labels became optional.
- "window_name" can now be default values of GUI labels.
- Tuw now redirects stderr into the console window.
- Replaced std::string with a custom string class to reduce the binary size.

ver 0.7.2
- Added "optional" to ignore some options when a text box is empty.
- Added "prefix" and "suffix" options to append strings to user inputs.
- Removed unused functions from release builds.
- Re-enabled exception handlings for the std library.
- Optimized some functions for binary size.

ver 0.7.1
- Added support for C-style comments and trailing commas in JSON files.
- Added support for .jsonc files.
- Added "codepage" option to support UTF-8 outputs on Windows.
- Added support for colorized outputs on Linux.
- Fixed a bug that there is no limit on the buffer size of the console window on Linux.
- Optimized some functions to reduce the binary size.

ver 0.7.0
- Added options for string validation.
- Added support for colorized output on Windows.
- Added an option to skip success dialog.
- Prohibited URLs that have linefeeds.

ver 0.6.5
- Added support for Solaris/illumos.
- Added support for MinGW-w64.
- Fixed a bug that Windows was not able to handle long paths
  (that have more than 260 characters.)
- Fixed a bug that OpenBSD was not able to get executable paths.
- Fixed a bug that empty strings were removed from arguments on Windows.
- Refactored codes to reduce potential bugs.

ver 0.6.4
- Added Universal CRT version for Windows 10 or later
- Fixed a bug that the execution button still says "processing" after getting errors.

ver 0.6.3
- Supported Unix-like systems (FreeBSD, Haiku, etc).
- Added URL validation for safety.
  (You can not open help URLs contain some special characters.)

ver 0.6.2
- Fixed typos.
- Fixed a bug that the menu can be empty on macOS.
- Added safe mode.

ver 0.6.1
- Added radio buttons to GUI components
- "placeholder" became the standard spelling for the placeholders option.
  ("empty_message" became the alternative one.)
- "combo" became the standard spelling for the combo boxes.
  ("choice" became the alternative one.)
- Fixed an error when opening URLs with debug builds.
- Fixed a crash when the executed process uses multiprocessing and each child process sends something to stdout.
- Fixed a bug that drag-drop events are ignored on newer versions of GTK.
- Fixed a bug that tuw didn't check the type of the `"default"` values for combo boxies.

ver 0.6.0
- Switched GUI library from wxWidgets to libui.
- Changed license from GPL to MIT.
- Fixed a bug that old components won't be freed when putting new components.

ver 0.5.1
- Added a predefined ID for the user's home directory.
- Added an option to rename the "Browse" button for path pickers.
- Disabled c++ exceptions.
- Removed more codes from wxWidgets.
- Fixed crashes when opening URLs or files via the help menu.
- Removed compilation warnings about overriding.

ver 0.5.0
- Changed the json formats for "choice" and "check_array"
- Added command-line utils to embed json into exe.
- Added options for cross-platform support.
- Added a function for saving the previously executed command.
- Changed the json library from nlohmann/json to RapidJSON.
- Changed the format of gui_config.json
- Fixed a bug that help menu will be shown even if the size of ["help"] is zero.
- Fixed an error when the size of ["gui"] is zero.
- Fixed a GTK warning about component sizes.
- Removed more codes from wxWidgets.
- Applied optimization for objective-c++ files.
- Applied link time optimization.
- Used cstdio instead of iostream.
- Removed compressed version from releases.

ver 0.4.1
- Raise errors when the command requires more components or there are unused components.
- Error messages became more detailed when failed to parse commands.
- Commands will be shown in the log when loading definitions.
- Fixed a bug that "%%" won't escsape the "%" symbol.
- Fixed a bug that the window is resizable on macOS and Linux.
- Fixed typos.
- Refined codes.

ver 0.4.0
- Changed license to GPL
- Added options for exit code.
- Added predefined ids for "%" and the executable directory.
- Fixed an error when the current directory is not the same as the executable directory. (on Windows)
- URLs and file paths will be checked before opening.
- Removed more codes from wxWidgets to reduce the binary size.
- Applied some optimization options to reduce the binary size.
- Applied UPX to compress executables.
- Refined codes.

ver 0.3.1
- Added number pickers to GUI components.
- Fixed a bug that it can't open files on macOS.
- Error messages became more detailed when failed to parse json file.
- Refined codes.

ver 0.3.0
- Added "file" type to help menu.
- Added "tooltip" option to all components.
- Added options to check tool version.
- Supported alternate spellings for some json keys and values.
- Fixed a bug that error dialog can't show non-ascii characters.
- Updated wxWidgets to v3.2.2
- Removed more codes from wxWidgets to reduce the binary size.
- Refined codes.

ver 0.2.3
- Fixed errors when using non-ascii characters in labels.
- Fixed an error when a command requires more components for arguments.
- Fixed some examples that will raise the command error.
- Fixed an error when executing the default command.
- Used hash instead of label in gui_config.json
- Removed unnecessary codes from wxWidgets to reduce the binary size.

ver 0.2.2
- Added "id" option to all components.
  (It'll be used as a variable name for the command and gui_config.json)
- Improved json validator

ver0.2.1
- Introduced wxBoxSizer to align components automatically.
- Added "default" option to all components.
- Fixed a bug that non-ascii characters won't be shown up as "empty_message." (Windows)
- Fixed a bug that LogFrame can't catch non-ascii characters from std::cout. (Linux)
- Fixed an error when executing non-ascii commands. (Unix)
- Fixed an error when saving non-ascii characters for text box.

ver0.2.0
- Made "button" key optional
- Fixed a bug that text boxes can't handle their input values properly.
- Modified window size for macOS
- Removed null values from gui_config.json
- Introduced tests and linting

ver0.1.3
- Added "empty_message" option to text box and pickers. They can show messages when their text boxes are empty.
- Added "default" option to check box and text box
- Fixed errors when failing to read json files
- Removed dependencies from macOS build

ver0.1.2
- Fixed a bug it needs dll for runtime libs

ver0.1.1
- Added textbox to GUI components
- Changed json format
- Fixed an error when reading utf-16 strings from stdout
- Fixed a bug can't read configs for checkboxes

ver0.1.0
- Added support for mac and linux (ubuntu)
- Added console window for linux
- Added add_quotes option to components
- Fixed bug when compiling with gcc

ver0.0.4
- Added UTF-8 support for Windows
- Added format check for gui_definition.json
- Added a function to add quotes to path
- Changed command format

ver0.0.3
- Added checkboxes to GUI components
- Added width setting to choice
- Improved error handling

ver0.0.2
- Added checkbox and text to GUI components
- Added support for multiple commands
- Added support for help URLs
- Added function to save status

ver0.0.1
- Initial release
